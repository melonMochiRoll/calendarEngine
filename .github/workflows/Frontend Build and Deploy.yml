name: Frontend Build and Deploy
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ

on:
  push:
    branches: [ "release" ]

jobs:
  build_and_deploy:
    name: Build And Deploy
    runs-on: ubuntu-latest
    environment: production
    env:
      REACT_APP_NODE_ENV: production

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - name: ‚úÖ Check out repository code
      uses: actions/checkout@v4
    
    - name: üßæ Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: ‚ú® Install dependencies
      run: npm ci
    
    - name: üî® Build Project
      run: npm run build -- --mode production

    # - name: Debug
    #   run: |
    #     ls -Fal
    #     ls -Fal dist/
    
    - name: üíª Get Github Actions IP
      id: ip
      uses: haythem/public-ip@v1.2

    - name: üîß Set Dist Filename
      id: dist
      run: |
        DIST_FILENAME=calendar-engine-$(date +%Y%m%d)
        "dist_filename=$DIST_FILENAME" >> $GITHUB_OUTPUT

    - name: üîë Add Github Actions IP to Security group
      run: |
        aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32

    - name: üîß Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}
        
    - name: üîß Set SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/ec2_rsa
        chmod 600 ~/.ssh/ec2_rsa

    - name: üì¶ Compress Build Files
      run: tar cvf ${{ steps.dist.outputs.dist_filename }}.tar -C ./dist .

    - name: üöõ Upload to S3
      run: aws s3 cp --region ${{ vars.AWS_REGION }} ./${{ steps.dist.outputs.dist_filename }}.tar s3://${{ secrets.S3_BUCKET_NAME }}/${{ steps.dist.outputs.dist_filename }}.tar

    - name: ‚¨áÔ∏è Download from S3
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.AWS_EC2_HOST }} # 
        username: ${{ secrets.AWS_EC2_USERNAME }}
        key: ~/.ssh/ec2_rsa
        port: ${{ secrets.AWS_SSH_PORT }}
        script_stop: true
        script: |
          aws s3 cp s3://${{ secrets.S3_BUCKET_NAME }}/${{ steps.dist.outputs.dist_filename }}.tar /home/ec2-user/client_dist
          tar xvf ${{ steps.dist.outputs.dist_filename }}.tar -C ./client_dist .
          sudo service nginx restart
          pm2 restart main

    # - name: üöÄ Deploy to EC2
    #   run: |
    #     SOURCE_DIR="${GITHUB_WORKSPACE}/dist/"
    #     TARGET_DIR="ec2-user@${{ secrets.EC2_HOST }}:/home/ec2-user/client_dist"
    #     rsync -avz --delete -e "ssh -i ~/.ssh/ec2_rsa -o StrictHostKeyChecking=no" ${SOURCE_DIR} ${TARGET_DIR}
        
    - name: üîë Remove Github Actions IP From Security Group
      if: always()
      run: |
        aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
